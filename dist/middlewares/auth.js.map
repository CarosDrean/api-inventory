{"version":3,"sources":["../../src/middlewares/auth.js"],"names":["auth","role","userTemp","getRole","user","console","log","undefined","permission","getRoleUser","then","rol","checkHeaders","req","res","next","token","headers","jwt","verify","SECRET_TOKEN","checkToken","newToken","set","idUser","decode","User","findOne","_id","getToken","sign","expiresIn","login","email","password","success","errors","path","message"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken'\r\nimport User from '../models/user'\r\nimport { SECRET_TOKEN } from '../config'\r\nimport permission from '../middlewares/permissions'\r\n\r\nconst auth = {}\r\n\r\nlet role\r\nlet userTemp\r\nfunction getRole(user) {\r\n  console.log('role: ' + role)\r\n  if (userTemp !== undefined) {\r\n    if(userTemp !== user) role = undefined\r\n  }\r\n  if (user) {\r\n    if (role === undefined) {\r\n      userTemp = user\r\n      permission.getRoleUser(user).then((rol) => {\r\n        console.log('Actualizando role: ' + rol)\r\n        role = rol\r\n      })\r\n    }\r\n  } \r\n  return role\r\n}\r\n\r\nauth.checkHeaders = async (req, res, next) => {\r\n  const token = req.headers[\"x-token\"]\r\n  if (token) {\r\n    try {\r\n      console.log('intentando...')\r\n      const {\r\n        user\r\n      } = jwt.verify(token, SECRET_TOKEN)\r\n      // const {role} = await User.findOne({ _id: user }, {role: 1})\r\n      req.role = getRole(user)\r\n      req.user = user\r\n    } catch (e) {\r\n      //INVALID token\r\n      console.log('nuevamente intentando...')\r\n      const newToken = await auth.checkToken(token)\r\n      // const {role} = await User.findOne({ _id: newToken.user }, {role: 1})\r\n      req.role = role\r\n      req.user = getRole(newToken.user)\r\n      if (newToken.token) {\r\n        res.set(\"Access-Control-Expose-Headers\", \"x-token\")\r\n        res.set(\"x-token\", newToken.token)\r\n      }\r\n    }\r\n  }\r\n  next()\r\n}\r\n\r\nauth.checkToken = async (token) => {\r\n  let idUser = null\r\n  try {\r\n    const {\r\n      user\r\n    } = await jwt.decode(token)\r\n    idUser = user;\r\n  } catch (e) {\r\n    return {}\r\n  }\r\n  const user = await User.findOne({\r\n    _id: idUser\r\n  })\r\n  const newToken = auth.getToken(user)\r\n  return {\r\n    user: user._id,\r\n    token: newToken\r\n  }\r\n}\r\n\r\nauth.getToken = ({\r\n  _id\r\n}) => {\r\n  const token = jwt.sign({\r\n    user: _id\r\n  }, SECRET_TOKEN, {\r\n    expiresIn: '5d'\r\n  })\r\n  return token\r\n}\r\n\r\nauth.login = async (email, password) => {\r\n  const user = await User.findOne({\r\n    'user': email\r\n  })\r\n  if (!user) {\r\n    return {\r\n      success: false,\r\n      errors: [{\r\n        path: 'email',\r\n        message: 'Email no existe'\r\n      }]\r\n    }\r\n  }\r\n  if (password !== user.password) {\r\n    return {\r\n      success: false,\r\n      errors: [{\r\n        path: 'password',\r\n        message: 'Password inv√°lido'\r\n      }]\r\n    }\r\n  }\r\n\r\n  const token = auth.getToken(user)\r\n\r\n  return {\r\n    success: true,\r\n    token,\r\n    errors: []\r\n  }\r\n}\r\n\r\nexport default auth"],"file":"auth.js"}