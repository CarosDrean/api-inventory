{"version":3,"sources":["../../src/resolvers/compatibility.js"],"names":["Query","compatibility","_","_id","Compatibility","findById","exec","compatibilitys","find","Mutation","createCompatibility","input","save","deleteCompatibility","findByIdAndDelete","updateCompatibility","findByIdAndUpdate"],"mappings":";;;;;;;AAAA;;;;;;;;eAEe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,aAAa;AAAA;AAAA;AAAA,8BAAE,iBAAMC,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAWC,gBAAAA,GAAX,QAAWA,GAAX;AAAA;AAAA,uBACEC,2BAAcC,QAAd,CAAuBF,GAAvB,EAA4BG,IAA5B,EADF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADV;AAIHC,IAAAA,cAAc;AAAA;AAAA;AAAA,8BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACCH,2BAAcI,IAAd,EADD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJX,GADI;AASXC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,mBAAmB;AAAA;AAAA;AAAA,8BAAE,kBAAMR,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAWS,gBAAAA,KAAX,SAAWA,KAAX;AACXV,gBAAAA,aADW,GACK,IAAIG,0BAAJ,CAAkBO,KAAlB,CADL;AAAA;AAAA,uBAEJV,aAAa,CAACW,IAAd,EAFI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADb;AAKNC,IAAAA,mBAAmB;AAAA;AAAA;AAAA,8BAAE,kBAAMX,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAWC,gBAAAA,GAAX,SAAWA,GAAX;AAAA;AAAA,uBACJC,2BAAcU,iBAAd,CAAgCX,GAAhC,CADI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OALb;AAQNY,IAAAA,mBAAmB;AAAA;AAAA;AAAA,8BAAE,kBAAMb,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAWC,gBAAAA,GAAX,SAAWA,GAAX,EAAgBQ,KAAhB,SAAgBA,KAAhB;AAAA;AAAA,uBACJP,2BAAcY,iBAAd,CAAgCb,GAAhC,EAAqCQ,KAArC,EAA4C;AAAE,yBAAK;AAAP,iBAA5C,CADI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AARb;AATC,C","sourcesContent":["import Compatibility from '../models/compatibility'\r\n\r\nexport default {\r\n    Query: {\r\n        compatibility: async(_, { _id }) => {\r\n            return await Compatibility.findById(_id).exec()\r\n        },\r\n        compatibilitys: async() => {\r\n            return await Compatibility.find()\r\n        }\r\n    },\r\n    Mutation: {\r\n        createCompatibility: async(_, { input }) => {\r\n            const compatibility = new Compatibility(input)\r\n            return await compatibility.save()\r\n        },\r\n        deleteCompatibility: async(_, { _id }) => {\r\n            return await Compatibility.findByIdAndDelete(_id)\r\n        },\r\n        updateCompatibility: async(_, { _id, input }) => {\r\n            return await Compatibility.findByIdAndUpdate(_id, input, { new: true })\r\n        }\r\n    }\r\n}"],"file":"compatibility.js"}