{"version":3,"sources":["../../src/resolvers/user.js"],"names":["Query","user","_","_id","User","findById","exec","users","find","Mutation","loginUser","email","password","auth","login","createUser","input","save","deleteUser","findByIdAndDelete","updateUser","findByIdAndUpdate","movements","Movement"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;eAEe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE,iBAAMC,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAWC,gBAAAA,GAAX,QAAWA,GAAX;AAAA;AAAA,uBACWC,kBAAKC,QAAL,CAAcF,GAAd,EAAmBG,IAAnB,EADX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADD;AAIHC,IAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACUH,kBAAKI,IAAL,EADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJF,GADI;AASXC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS;AAAA;AAAA;AAAA,8BAAE,kBAAOR,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYS,gBAAAA,KAAZ,SAAYA,KAAZ,EAAmBC,QAAnB,SAAmBA,QAAnB;AAAA,kDAAkCC,iBAAKC,KAAL,CAAWH,KAAX,EAAkBC,QAAlB,CAAlC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADH;AAENG,IAAAA,UAAU;AAAA;AAAA;AAAA,8BAAE,kBAAMb,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAWc,gBAAAA,KAAX,SAAWA,KAAX;AACFf,gBAAAA,IADE,GACK,IAAIG,iBAAJ,CAASY,KAAT,CADL;AAAA;AAAA,uBAEKf,IAAI,CAACgB,IAAL,EAFL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFJ;AAMNC,IAAAA,UAAU;AAAA;AAAA;AAAA,8BAAE,kBAAMhB,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAWC,gBAAAA,GAAX,SAAWA,GAAX;AAAA;AAAA,uBACKC,kBAAKe,iBAAL,CAAuBhB,GAAvB,CADL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OANJ;AASNiB,IAAAA,UAAU;AAAA;AAAA;AAAA,8BAAE,kBAAMlB,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAWC,gBAAAA,GAAX,SAAWA,GAAX,EAAgBa,KAAhB,SAAgBA,KAAhB;AAAA;AAAA,uBACKZ,kBAAKiB,iBAAL,CAAuBlB,GAAvB,EAA4Ba,KAA5B,EAAmC;AAAE,yBAAK;AAAP,iBAAnC,CADL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AATJ,GATC;AAsBXZ,EAAAA,IAAI,EAAE;AACFkB,IAAAA,SAAS;AAAA;AAAA;AAAA,8BAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAQnB,gBAAAA,GAAR,SAAQA,GAAR;AAAA;AAAA,uBACMoB,qBAASf,IAAT,CAAc;AAAEP,kBAAAA,IAAI,EAAEE;AAAR,iBAAd,CADN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADP;AAtBK,C","sourcesContent":["import jwt from 'jsonwebtoken'\r\nimport { SECRET_TOKEN } from '../config'\r\nimport auth from '../middlewares/auth'\r\nimport User from '../models/user'\r\nimport Movement from '../models/movement'\r\n\r\nexport default {\r\n    Query: {\r\n        user: async(_, { _id }) => {\r\n            return await User.findById(_id).exec()\r\n        },\r\n        users: async() => {\r\n            return await User.find()\r\n        }\r\n    },\r\n    Mutation: {\r\n        loginUser: async (_, { email, password }) => auth.login(email, password),\r\n        createUser: async(_, { input }) => {\r\n            const user = new User(input)\r\n            return await user.save()\r\n        },\r\n        deleteUser: async(_, { _id }) => {\r\n            return await User.findByIdAndDelete(_id)\r\n        },\r\n        updateUser: async(_, { _id, input }) => {\r\n            return await User.findByIdAndUpdate(_id, input, { new: true })\r\n        }\r\n    },\r\n    User: {\r\n        movements: async({ _id }) => {\r\n            return await Movement.find({ user: _id })\r\n        }\r\n    }\r\n}"],"file":"user.js"}