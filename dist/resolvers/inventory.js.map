{"version":3,"sources":["../../src/resolvers/inventory.js"],"names":["Query","inventory","_","_id","user","role","permission","isAuthenticated","Inventory","findById","exec","inventorys","args","isAdmin","find","sort","Mutation","createInventory","input","save","deleteInventory","findByIdAndDelete","updateInventory","findByIdAndUpdate","products","Product","categorys","Category","movements","Movement"],"mappings":"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","sourcesContent":["import Inventory from '../models/inventory'\r\nimport Product from '../models/product'\r\nimport Category from '../models/category'\r\nimport Movement from '../models/movement'\r\nimport permission from '../middlewares/permissions'\r\n\r\nexport default {\r\n    Query: {\r\n        inventory: async(_, { _id }, { user, role }) => {\r\n            permission.isAuthenticated(user)\r\n            return await Inventory.findById(_id).exec()\r\n        },\r\n        inventorys: async(_, args, { user, role }) => {\r\n            permission.isAdmin(user, role)\r\n            return await Inventory.find().sort({_id: -1})\r\n        }\r\n    },\r\n    Mutation: {\r\n        createInventory: async(_, { input }, { user, role }) => {\r\n            permission.isAdmin(user, role)\r\n            const inventory = new Inventory(input)\r\n            return await inventory.save()\r\n        },\r\n        deleteInventory: async(_, { _id }, { user, role }) => {\r\n            permission.isAdmin(user, role)\r\n            return await Inventory.findByIdAndDelete(_id)\r\n        },\r\n        updateInventory: async(_, { _id, input }, { user, role }) => {\r\n            permission.isAdmin(user, role)\r\n            return await Inventory.findByIdAndUpdate(_id, input, { new: true })\r\n        }\r\n    },\r\n    Inventory: {\r\n        products: async({ _id }) => {\r\n            return await Product.find({ inventory: _id })\r\n        },\r\n        categorys: async({ _id }) => {\r\n            return await Category.find({ inventory: _id })\r\n        },\r\n        movements: async({ _id }) => {\r\n            return await Movement.find({ inventory: _id })\r\n        },\r\n    }\r\n}"],"file":"inventory.js"}